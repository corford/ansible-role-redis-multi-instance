---
- name: Redis | Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "empty.yml"
  tags: redis_multi

- name: Redis | Set dependencies
  set_fact:
    redis_multi_dependencies: "{{ __redis_multi_dependencies }}"
  when: redis_multi_dependencies is not defined
  tags: redis_multi

- name: Redis | Ensure dependencies are installed
  package: "name={{ item }} state=latest"
  with_items: "{{ redis_multi_dependencies }}"
  tags: redis_multi

- name: Redis | Ensure group exists
  group: name={{ redis_multi_group }} state=present
  tags: redis_multi

- name: Redis | Ensure user exists
  user:
    name: "{{ redis_multi_user }}"
    shell: /bin/true
    group: "{{ redis_multi_group }}"
    home: "{{ redis_multi_data_path }}"
    createhome: false
    state: present
  tags: redis_multi

- name: Redis | Ensure conf dir exists
  file: path={{ redis_multi_conf_path }} state=directory mode=0755 owner={{ redis_multi_user }} group={{ redis_multi_group }}
  tags: redis_multi

- name: Redis | Ensure data dir exists
  file: path={{ redis_multi_data_path }} state=directory mode=0750 owner={{ redis_multi_user }} group={{ redis_multi_group }}
  tags: redis_multi

- name: Redis | Ensure pid dir exists
  file: path={{ redis_multi_pid_path }} state=directory mode=0750 owner={{ redis_multi_user }} group={{ redis_multi_group }}
  tags: redis_multi

- name: Redis | Get installed version
  command: redis-server -v
  ignore_errors: yes
  changed_when: no
  register: redis_multi_installed_version
  tags: redis_multi

- set_fact:
    redis_multi_reinstall: yes
  when: '(redis_multi_installed_version|success and (redis_multi_installed_version.stdout | regex_replace("^.*?([0-9\.]+)$", "\\1") | version_compare(redis_multi_version, operator="!=")))'
  tags: redis_multi

- block:
    - name: Redis | Download tarball
      get_url:
        url: "{{ redis_multi_url }}"
        dest: "{{ redis_multi_workspace }}/{{ redis_multi_url|basename }}"
        checksum: "{{ redis_multi_checksum }}"

    - name: Redis | Unpack
      unarchive:
        src: "{{ redis_multi_workspace }}/{{ redis_multi_url|basename }}"
        dest: "{{ redis_multi_workspace }}"
        creates: "{{ redis_multi_workspace }}/redis-{{ redis_multi_version }}/README.md"
        copy: no

    - name: Redis | Build
      command: make
      args:
        chdir: "{{ redis_multi_workspace }}/redis-{{ redis_multi_version }}"
        creates: "{{ redis_multi_workspace }}/redis-{{ redis_multi_version }}/src/redis-server"

    - name: Redis | Install
      copy:
        remote_src: yes
        src: "{{ redis_multi_workspace }}/redis-{{ redis_multi_version }}/src/{{ item }}"
        dest: "{{ redis_multi_install_path }}/{{ item }}"
        mode: 0755
      with_items:
        - redis-benchmark
        - redis-check-aof
        - redis-check-rdb
        - redis-cli
        - redis-server

  when: redis_multi_installed_version|failed or redis_multi_reinstall        
  tags: redis_multi

- name: Redis | Write systemd target file
  template:
    src: redis.target.j2
    dest: "/etc/systemd/system/redis.target"
    mode: 0644
  tags: redis_multi
